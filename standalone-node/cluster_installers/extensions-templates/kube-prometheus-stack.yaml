# SPDX-FileCopyrightText: (C) 2024 Intel Corporation
# SPDX-License-Identifier: LicenseRef-Intel
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: kube-prometheus-stack
  namespace: kube-system
spec:
  chartContent:
  targetNamespace: observability
  createNamespace: true
  valuesContent: |-
    minimalMetricSet:
      # yamllint disable-line rule:line-length
      kubelet: &kubelet "container_cpu_usage_seconds_total|container_memory_working_set_bytes|container_network_receive_bytes_total|container_network_receive_errors_total|container_network_receive_packets_dropped_total|container_network_receive_packets_total|container_network_transmit_bytes_total|container_network_transmit_errors_total|container_network_transmit_packets_dropped_total|container_network_transmit_packets_total|machine_cpu_cores|machine_memory_bytes|scrape_samples_scraped|up|kubelet_volume_stats_capacity_bytes|kubelet_volume_stats_inodes|kubelet_volume_stats_inodes_used|kubelet_volume_stats_used_bytes"
      # yamllint disable-line rule:line-length
      kubeState: &kubeState "kube_configmap_info|kube_endpoint_info|kube_node_info|kube_node_status_condition|kube_persistentvolumeclaim_info|kube_pod_container_info|kube_pod_container_resource_limits|kube_pod_container_resource_requests|kube_pod_container_status_running|kube_pod_info|kube_pod_status_phase|kube_secret_info|kube_service_info|kube_statefulset_replicas|kube_statefulset_status_replicas_ready|scrape_samples_scraped|kube_pod_container_status_waiting_reason|up"

    resources:
      requests:
        memory: 400Mi
    defaultRules:
      create: false
    # Alertmanager options (Not present in DEK)
    alertmanager:
      enabled: false
    # Grafana is deployed as a separate chart
    grafana:
      enabled: false
    # KubeApiServer: disable for now
    kubeApiServer:
      enabled: false
    # Kubelet metrics
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: keep
            sourceLabels: [__name__]
            regex: *kubelet
        probesMetricRelabelings:
          - action: drop
            sourceLabels: [metrics_path]
            regex: "/metrics/probes"
        cAdvisorMetricRelabelings:
          - action: keep
            sourceLabels: [__name__]
            regex: *kubelet
    # Kube controller manager
    kubeControllerManager:
      enabled: false
    # CoreDNS
    coreDns:
      enabled: false
    # Kube ETCD
    kubeEtcd:
      enabled: false
    # Kube Scheduler
    kubeScheduler:
      enabled: false
    # Kube Proxy
    kubeProxy:
      enabled: false
    # Kube state metrics
    kubeStateMetrics:
      enabled: true
    # Node Exporter
    nodeExporter:
      enabled: false  # We already have node-exporter installation in separate chart

    fullnameOverride: "prometheus"  # do not use kube-prometheus-stack

    # Prometheus Operator
    prometheusOperator:
      image:
        registry: quay.io
        repository: prometheus-operator/prometheus-operator
        tag: v0.81.0
      enabled: true
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 100m
          memory: 100Mi
      # Use TLS
      tls:
        enabled: true
      # Configure admission Webhooks (validating manifests)
      admissionWebhooks:
        enabled: true
        patch:
          enabled: false
        certManager:
          enabled: true
          issuerRef:
            name: "edge-node-cluster-issuer"
            kind: "ClusterIssuer"
      serviceMonitor:
        selfMonitor: true

      prometheusConfigReloader:
        image:
          registry: quay.io
          repository: prometheus-operator/prometheus-config-reloader
          tag: "v0.81.0"
      tolerations:
        # - effect: NoSchedule
        #   key: node-role.kubernetes.io/worker
        - effect: NoSchedule
          operator: Exists
    # yamllint disable-line rule:comments-indentation
      # Prometheus Operator should deploy on master node
      # nodeSelector:
      #   node-role.kubernetes.io/worker: 'true'

    prometheus:
      enabled: true
      resources:
        requests:
          memory: 400Mi
      # Prometheus service options
      service:
        annotations: {}
        labels: {}
        clusterIP: ""

      serviceMonitor:
        selfMonitor: true
        scheme: https
        tlsConfig:
          keySecret:
            key: tls.key
            name: prometheus-tls
          ca:
            secret:
              key: ca.crt
              name: prometheus-tls
          cert:
            secret:
              key: tls.crt
              name: prometheus-tls
          insecureSkipVerify: true  # Prometheus should trust itself
        relabelings:
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - sourceLabels: [__meta_kubernetes_pod_name]
            regex: 'prometheus.*'
            action: keep
          - sourceLabels: [__address__]
            regex: '.*:.*'
            action: keep
          - sourceLabels: [__meta_kubernetes_pod_node_name]
            action: replace
            targetLabel: instance
          - sourceLabels: [__meta_kubernetes_pod_name]
            action: replace
            targetLabel: kubernetes_pod_name

      # Prometheus server options
      prometheusSpec:
        # How often should Prometheus scrape data
        evaluationInterval: 90s
        scrapeInterval: 90s
        scrapeTimeout: 20s
        # How long should Prometheus keep metrics
        retention: 15d
        image:
          registry: quay.io
          repository: prometheus/prometheus
          tag: v3.2.1
        securityContext:
          runAsNonRoot: true
          runAsUser: 501
          runAsGroup: 500
        web:
          tlsConfig:
            keySecret:
              key: tls.key
              name: prometheus-tls
            client_ca:
              secret:
                key: ca.crt
                name: prometheus-tls
            cert:
              secret:
                key: tls.crt
                name: prometheus-tls
            clientAuthType: RequestClientCert
        volumeMounts:
          - name: prometheus-tls
            mountPath: "/etc/intel_edge_node/certs"
            readOnly: true
          - name: prometheus-token
            mountPath: "/etc/intel_edge_node/tokens/prometheus/access_token"
            readOnly: true
          - name: ca-certificates
            mountPath: "/etc/ssl/certs"
            readOnly: true
        volumes:
          - name: prometheus-tls
            secret:
              secretName: prometheus-tls
          - name: prometheus-token
            hostPath:
              path: /etc/intel_edge_node/tokens/prometheus/access_token
          - name: ca-certificates
            hostPath:
              path: /etc/intel_edge_node/orch-ca-cert
        storageSpec:
          volumeClaimTemplate:
            metadata:
              name: "prometheus-volume"
            spec:
              storageClassName: openebs-lvmpv
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 10Gi
        initContainers:
          - name: setup-permissions
            image: "busybox:1.35.0"
            imagePullPolicy: IfNotPresent
            securityContext:
              runAsUser: 0
              runAsGroup: 0
              runAsNonRoot: false
            volumeMounts:
              - name: "prometheus-volume"
                mountPath: /data
            command: ["/bin/chmod", "-R", "777", "/data"]
        externalLabels:
          # TODO
          clusterName:
            global.fleet.clusterLabels.edge-orchestrator.intel.com/clustername
          hostGuid:
            global.fleet.edge-orchestrator.intel.com/host-uuid
          projectId:
            global.fleet.clusterLabels.edge-orchestrator.intel.com/project-id
        tolerations:
          # TODO have CAPI correctly label worker nodes
          # - effect: NoSchedule
          #   key: node-role.kubernetes.io/worker
          - effect: NoSchedule
            operator: Exists
        # Prometheus should deploy on master node
        nodeSelector:
        # yamllint disable-line rule:comments-indentation
          # node-role.kubernetes.io/worker: 'true'

        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
    kube-state-metrics:
      nodeExporter:
        enabled: false
      fullnameOverride: kube-state-metrics
      tolerations:
        - effect: NoSchedule
          operator: Exists
      image:
        registry: registry.k8s.io
        repository: kube-state-metrics/kube-state-metrics
        tag: v2.15.0
      resources:
        limits:
          cpu: 100m
          memory: 64Mi
        requests:
          cpu: 10m
          memory: 32Mi
      prometheus:
        monitor:
          scheme: https
          tlsConfig:
            serverName: prometheus-kube-state-metrics
            keySecret:
              key: tls.key
              name: prometheus-tls
            ca:
              secret:
                key: ca.crt
                name: prometheus-tls
            cert:
              secret:
                key: tls.crt
                name: prometheus-tls
          metricRelabelings:
            - action: keep
              sourceLabels: [__name__]
              regex: *kubeState
      kubeRBACProxy:
        enabled: true
        image:
          registry: quay.io
          repository: brancz/kube-rbac-proxy
          tag: v0.19.0
        extraArgs:
          - "--tls-cert-file=/etc/tls/tls.crt"
          - "--tls-private-key-file=/etc/tls/tls.key"
          - "--client-ca-file=/etc/tls/ca.crt"
          - "--ignore-paths=/livez,/readyz"
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 10m
            memory: 32Mi
        volumeMounts:
          - mountPath: /etc/tls
            name: kube-state-rbac-proxy-tls
            readOnly: true
      volumes:
        - name: kube-state-rbac-proxy-tls
          secret:
            secretName: kube-state-rbac-proxy-tls
      selfMonitor:
        enabled: true
