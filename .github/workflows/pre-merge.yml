---
# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Pre-Merge CI Pipeline

on:
  pull_request:
    branches:
      - main
      - release-*
      - avoid_standalone_folder

env:
  MARKDOWNLINT_CLI_VER: 0.44.0

jobs:
  pre-merge-pipeline:
    permissions:
      contents: read
    uses: open-edge-platform/orch-ci/.github/workflows/pre-merge.yml@0.1.13
    with:
      run_version_check: true
      run_dep_version_check: true
      run_freeup_ubuntu_space: true
      run_build: true
      run_lint: true
      run_test: false
      run_validate_clean_folder: false
      run_docker_build: true
      run_artifact: true
      artifacts_path: "standalone-node/shellcheck_report.txt"
      trivy_image_skip:  "postgres:16.4"
      trivy_config_path: ${{ matrix.project_folder }}/trivy.yaml
    secrets:
      NO_AUTH_ECR_PUSH_USERNAME: ${{ secrets.NO_AUTH_ECR_PUSH_USERNAME }}
      NO_AUTH_ECR_PUSH_PASSWD: ${{ secrets.NO_AUTH_ECR_PUSH_PASSWD }}
  final-check:
      runs-on: ubuntu-latest
      permissions:
        contents: read
      if: ${{ always() }}
      needs: [pre-merge-pipeline]
      steps:
        - name: Final Status Check
          env:
            pre_merge_pipeline: ${{ needs.pre-merge-pipeline.result }}
          run: |
            results=("pre_merge_root_pipeline" "pre_merge_pipeline")
            status="OK"
            
            for result in "${results[@]}"; do
              pipeline_result=$(eval echo \$$result)
              echo "${result} result: $pipeline_result"
                if [[ "$pipeline_result" != "success" && "$pipeline_result" != "skipped" ]]; then
                status="KO"
              fi
            done
            
            if [[ "$status" == "OK" ]]; then
              echo "Pre-merge check passed successfully."
            else
              echo "All pre-merge checks failed or were skipped. PR can't get merged"
              exit 1
            fi
